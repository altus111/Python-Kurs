#!/usr/bin/python
 
# ------------------------------------------------------------------
# Name  : WeatherLogger_00.py
# Source: https://raw.githubusercontent.com/walter-rothlin/Source-Code/master/Python_WaltisExamples/Code_05_D…
#
# Description: Polling REST Service and write values to console
# https://openweathermap.org/current
#
# Autor: Walter Rothlin
#
# History:
# 06-Jul-2022   Walter Rothlin      Initial Version generated by Postman
 
# ------------------------------------------------------------------
 
import json
import requests
import urllib.parse
import time
from datetime import datetime
import logging
import csv
from time import sleep
end_point_url = "https://api.openweathermap.org/data/2.5/weather"
appId = "9acc5ac99ab484b08d9c8f9e3b6dcccb"
 
ort_default = 'Wangen SZ'
ort = input(f"Ort  [*{ort_default}]   :")
if ort == "":
    ort = ort_default
ort_encoded = urllib.parse.quote(ort)
 
language_default = 'de'
language = input(f"Sprache [*{language_default},el,en,fr,hr,it]:")
if language == '':
    language = language_default
default_polling= 2
polling_time = input("Polling:")
if polling_time == "":
    polling_time = default_polling


units_default = "metric"
units = input(f"Units [*{units_default},standard, imperial]:")
if units == '':
    units = units_default
units_letter='°C'
if units == 'imperial':
    units_letter='°F'
elif units == 'standard':
    units_letter='K'

logging.basicConfig(
    filename='weatherlog.log',       # Name der Logdatei
    level=logging.INFO,                # Log-Level (INFO, DEBUG, ERROR, etc.)
    #format='%(asctime)s - %(levelname)s - %(message)s'  # Format der Logeinträge
)


counter = 0   
doLoop = True
while doLoop == True:
    print(f"Messung-Nr :{counter}")   
    params_end_point = {
        'appid': appId,
        'q'    : ort,
        'units': units,
        'lang' : language,
        'mode' : '',          # xml, html    
    }
     
     
    if False:
        request_url = f'{end_point_url}?q={ort_encoded}&units={units}&lang={language}&appid={appId}'
        #print(f'Request:{request_url}')
        #print('\n\n')
        response = requests.get(request_url)
    else:
        response = requests.get(end_point_url, params=params_end_point)
     
     
    responseStr = response.text
    # print(responseStr)
    # print('\n\n')
     
     
    jsonResponse = json.loads(responseStr)
    # print(jsonResponse)
    # print('\n\n')
     
     
    print("\n\nParses the response String and converts it to a JSON structutre (Dict-List-Dict...)")
     
    print("Show single fields!")
    print(f"   Ortsname:{jsonResponse['name']}")
    print(f"   Land:{jsonResponse['sys']['country']}")
     
    print(f"   Temp:{jsonResponse['main']['temp']}{units_letter}")
    print(f"   Temp:{jsonResponse['main']['pressure']}hPa")
    print(f"   Temp:{jsonResponse['main']['humidity']}%")
    print(f"   Desc:{jsonResponse['weather'][0]['description']}")
    print(f"   Desc:http://openweathermap.org/img/w/{jsonResponse['weather'][0]['icon']}.png")
    
    seperator = ";"
    temp = f"{jsonResponse['main']['temp']}"
    druck = f"{jsonResponse['main']['pressure']}"
    hum = f"{jsonResponse['main']['humidity']}"
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    print(f"time:{timestamp}")
    
    print(timestamp,temp,druck,hum, sep = seperator)

    
    header = ["File created", "Temperatur", "Druck", "Feuchtigkeit"]
    
    if counter == 0:     
        with open("./Wetterlogger.csv", mode="w", newline="", encoding="utf-8") as datei:
            writer = csv.writer(datei,delimiter=seperator)
            writer.writerow(header)
    else:
        line = [timestamp,temp,druck,hum]
        with open("./Wetterlogger.csv", mode="a", newline="", encoding="utf-8") as datei:
            writer = csv.writer(datei,delimiter=seperator)
            writer.writerow(line)
    
    
    print(f"Count: {counter}")
    sleep(polling_time)

    counter+=1
    if counter == 3:
        doLoop=False